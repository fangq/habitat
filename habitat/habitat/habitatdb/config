# == Configuration =======================================================
# Adapted version for Habitat wiki
# Based on UseModWiki 1.0

$CookieName  = "HabitatCookie";       # Name for this wiki (for multi-wiki sites)
$SiteName    = "Habitat: Small Wiki Does Big Things";       # Name of site (used for titles)
$HomePage    = "Home";          # Home page (change space to _)
$RCName      = "RecentChanges"; # Name of changes page (change space to _)
$LogoUrl     = "images/habitat_icon.png";     # URL for site logo ("" for nologo)
$ENV{PATH}   = "/usr/bin/";     # Path used to find "diff"
$ScriptTZ    = "";              # Local time zone ("" means do not print)
$RcDefault   = 30;              # Default number of RecentChanges days
@RcDays      = qw(1 3 7 30 90); # Days for links on RecentChanges
$KeepDays    = 30;              # Days to keep old revisions
$SiteBase    = "";              # Full URL for <BASE> header
$FullUrl     = "";              # Set if the auto-detected URL is wrong
$RedirType   = 2;               # 1 = CGI.pm, 2 = script, 3 = no redirect
$AdminPass   = "`tWtI:T6"; # Set to non-blank to enable password(s)
$EditPass    = "";              # Like AdminPass, but for editing only
$StyleSheet  = "css/wiki.css";   # URL for CSS stylesheet (like "/wiki.css")
$NotFoundPg  = "";              # Page for not-found links ("" for blank pg)
$EmailFrom   = "Habitat";          # Text for "From: " field of email notes.
$SendMail    = "/usr/sbin/sendmail";  # Full path to sendmail executable
$FooterNote  = '<a href="http://wenq.org/habitat/"><b>Powered by Habitat</b></a>';  # HTML for bottom of every page
$EditNote    = "";              # HTML notice above buttons on edit page
$MaxPost     = 1024 * 210;      # Maximum 210K posts (about 200K for pages)
$NewText     = "New Page";      # New page text ("" for default message)
$HttpCharset = "UTF-8";         # Charset for pages, like "iso-8859-2"
$UserGotoBar = "";              # HTML added to end of goto bar
$InterWikiMoniker = '';         # InterWiki moniker for this wiki. (for RSS)
$SiteDescription  = $SiteName;  # Description of this wiki. (for RSS)
$DiscussPage = '..discuss';     # Page suffix for discussion page
$RssLogoUrl  = '';              # Optional image for RSS feed
$EarlyRules  = '';              # Local syntax rules for wiki->html (evaled)
$LateRules   = '';              # Local syntax rules for wiki->html (evaled)
$KeepSize    = 0;               # If non-zero, maximum size of keep file
$BGColor     = 'white';         # Background color ('' to disable)
$DiffColor1  = '#ffffaf';       # Background color of old/deleted text
$DiffColor2  = '#cfffcf';       # Background color of new/added text
$FavIcon     = 'images/habitat_favicon.ico';              # URL of bookmark/favorites icon, or ''
$RssDays     = 30;              # Default number of days in RSS feed
$UserHeader  = '';              # Optional HTML header additional content
$UserBody    = '';              # Optional <BODY> tag additional content
$StartUID    = 1001;            # Starting number for user IDs

$UploadDir   = '';              # Full path (like /foo/www/uploads) for files
$UploadUrl   = '';              # Full URL (like http://foo.com/uploads)

@ImageSites  = qw();            # Url prefixes of good image sites: ()=all

# Major options:
$UseSubpage  = 1;           # 1 = use subpages,       0 = do not use subpages
$UseCache    = 1;           # 1 = cache HTML pages,   0 = generate every page
$PermEditAllowed = 1;           # 1 = editing allowed,    0 = read-only
$RawHtml     = 1;           # 1 = allow <HTML> tag,   0 = no raw HTML in pages
$HtmlTags    = 1;           # 1 = "unsafe" HTML tags, 0 = only minimal tags
$UseDiff     = 1;           # 1 = use diff features,  0 = do not use diff
$FreeLinks   = 1;           # 1 = use [[word]] links, 0 = LinkPattern only
$WikiLinks   = 0;           # 1 = use LinkPattern,    0 = use [[word]] only
$AdminDelete = 1;           # 1 = Admin only deletes, 0 = Editor can delete
$RunCGI      = 1;           # 1 = Run script as CGI,  0 = Load but do not run
$EmailNotify = 1;           # 1 = use email notices,  0 = no email on changes
$EmbedWiki   = 0;           # 1 = no headers/footers, 0 = normal wiki pages
$DeletedPage = 'DeletedPage';   # 0 = disable, 'PageName' = tag to delete page
$ReplaceFile = 'ReplaceFile';   # 0 = disable, 'PageName' = indicator tag
@ReplaceableFiles = ();     # List of allowed server files to replace
$TableSyntax = 1;           # 1 = wiki syntax tables, 0 = no table syntax
$NewFS       = 0;           # 1 = new multibyte $FS,  0 = old $FS
$PermUseUpload   = 0;           # 1 = allow uploads,      0 = no uploads
$AMathML     = 0;           # 1 = allow <amathml> tags, 0 = no amath markup

# Minor options:
$LogoLeft     = 0;      # 1 = logo on left,       0 = logo on right
$RecentTop    = 1;      # 1 = recent on top,      0 = recent on bottom
$UseDiffLog   = 0;      # 1 = save diffs to log,  0 = do not save diffs
$KeepMajor    = 1;      # 1 = keep major rev,     0 = expire all revisions
$KeepAuthor   = 0;      # 1 = keep author rev,    0 = expire all revisions
$ShowEdits    = 0;      # 1 = show minor edits,   0 = hide edits by default
$HtmlLinks    = 0;      # 1 = allow A HREF links, 0 = no raw HTML links
$SimpleLinks  = 0;      # 1 = only letters,       0 = allow _ and numbers
$NonEnglish   = 1;      # 1 = extra link chars,   0 = only A-Za-z chars
$ThinLine     = 0;      # 1 = fancy <hr> tags,    0 = classic wiki <hr>
$BracketText  = 1;      # 1 = allow [URL text],   0 = no link descriptions
$UseAmPm      = 0;      # 1 = use am/pm in times, 0 = use 24-hour times
$UseIndex     = 0;      # 1 = use index file,     0 = slow/reliable method
$UseHeadings  = 1;      # 1 = allow = h1 text =,  0 = no header formatting
$NetworkFile  = 1;      # 1 = allow remote file:, 0 = no file:// links
$BracketWiki  = 0;      # 1 = [WikiLnk txt] link, 0 = no local descriptions
$UseLookup    = 1;      # 1 = lookup host names,  0 = skip lookup (IP only)
$FreeUpper    = 0;      # 1 = force upper case,   0 = do not force case
$FastGlob     = 1;      # 1 = new faster code,    0 = old compatible code
$MetaKeywords = 1;      # 1 = Google-friendly,    0 = search-engine averse
$NamedAnchors = 1;      # 0 = no anchors, 1 = enable anchors,
                        # 2 = enable but suppress display
$SlashLinks   = 0;      # 1 = use script/action links, 0 = script?action
$UpperFirst   = 0;      # 1 = free links start uppercase, 0 = no ucfirst
$AdminBar     = 1;      # 1 = admins see admin links, 0 = no admin bar
$RepInterMap  = 0;      # 1 = intermap is replacable, 0 = not replacable
$ConfirmDel   = 1;      # 1 = delete link confirm page, 0 = immediate delete
$MaskHosts    = 0;      # 1 = mask hosts/IPs,      0 = no masking
$LockCrash    = 0;      # 1 = crash if lock stuck, 0 = auto clear locks
$HistoryEdit  = 1;      # 1 = edit links on history page, 0 = no edit links
$OldThinLine  = 0;      # 1 = old ==== thick line, 0 = ------ for thick line
$NumberDates  = 0;      # 1 = 2003-6-17 dates,     0 = June 17, 2003 dates
$ParseParas   = 0;      # 1 = new paragraph markup, 0 = old markup
$AuthorFooter = 1;      # 1 = show last author in footer, 0 = do not show
$AllUpload    = 0;      # 1 = anyone can upload,   0 = only editor/admins
$LimitFileUrl = 1;      # 1 = limited use of file: URLs, 0 = no limits
$MaintTrimRc  = 0;      # 1 = maintain action trims RC, 0 = only maintainrc
$SearchButton = 0;      # 1 = search button on page, 0 = old behavior
$EditNameLink = 1;      # 1 = edit links use name (CSS), 0 = '?' links
$UseMetaWiki  = 0;      # 1 = add MetaWiki search links, 0 = no MW links
$BracketImg   = 1;      # 1 = [url url.gif] becomes image link, 0 = no img

$MaxTreeDepth = 20;     # maximum number of nested subpage depth

# Names of sites.  (The first entry is used for the number link.)
@IsbnNames = ('bn.com', 'amazon.com', 'search');
# Full URL of each site before the ISBN
@IsbnPre = ('http://shop.barnesandnoble.com/bookSearch/isbnInquiry.asp?isbn=',
            'http://www.amazon.com/exec/obidos/ISBN=',
            'http://www.pricescan.com/books/BookDetail.asp?isbn=');
# Rest of URL of each site after the ISBN (usually '')
@IsbnPost = ('', '', '');

# HTML tag lists, enabled if $HtmlTags is set.
# Scripting is currently possible with these tags,
# so they are *not* particularly "safe".
# Tags that must be in <tag> ... </tag> pairs:
@HtmlPairs = qw(b i u font big small sub sup h1 h2 h3 h4 h5 h6 cite code
  em s strike strong tt var div center blockquote ol ul dl table caption);
# Single tags (that do not require a closing /tag)
@HtmlSingle = qw(br p hr li dt dd tr td th);
@HtmlPairs = (@HtmlPairs, @HtmlSingle);  # All singles can also be pairs

# == You should not have to change anything below this line. =============
$IndentLimit = 20;                  # Maximum depth of nested lists
$PageDir     = "$DataDir/page";     # Stores page data
$HtmlDir     = "$DataDir/html";     # Stores HTML versions
$UserDir     = "$DataDir/user";     # Stores user data
$KeepDir     = "$DataDir/keep";     # Stores kept (old) page data
$TempDir     = "$DataDir/temp";     # Temporary files and locks
$LockDir     = "$TempDir/lock";     # DB is locked if this exists
$InterFile   = "$DataDir/intermap"; # Interwiki site->url map
$RcFile      = "$DataDir/rclog";    # New RecentChanges logfile
$RcOldFile   = "$DataDir/oldrclog"; # Old RecentChanges logfile
$IndexFile   = "$DataDir/pageidx";  # List of all pages
$EmailFile   = "$DataDir/watch";   # Email notification lists

%NameSpaceV0=("$DiscussPage\$","plugin/wiki2bugzilla/discuss.preview"
  ,"_BUG\$","plugin/wiki2bugzilla/bug.preview"
  ,"_TASK\$","plugin/wiki2bugzilla/task.preview"
  ,"_TODO\$","plugin/wiki2bugzilla/todo.preview");
%NameSpaceV1=("$DiscussPage\$","plugin/wiki2bugzilla/discuss.postview"
  ,"_BUG\$","plugin/wiki2bugzilla/bug.postview"
  ,"_TASK\$","plugin/wiki2bugzilla/task.postview"
  ,"_TODO\$","plugin/wiki2bugzilla/todo.postview");
%NameSpaceE0=("$DiscussPage\$","plugin/wiki2bugzilla/discuss.preedit"
  ,"_BUG\$","plugin/wiki2bugzilla/bug.preedit"
  ,"_TASK\$","plugin/wiki2bugzilla/task.preedit"
  ,"_TODO\$","plugin/wiki2bugzilla/todo.preedit");
%NameSpaceE1=("$DiscussPage\$","plugin/wiki2bugzilla/discuss.postedit"
  ,"_BUG\$","plugin/wiki2bugzilla/bug.postedit"
  ,"_TODO\$","plugin/wiki2bugzilla/todo.postedit"
  ,"_TASK\$","plugin/wiki2bugzilla/task.postedit");
%Permissions=("$DiscussPage\$","ANONY"
  ,"_BUG\$","ANONY"
  ,"_TODO\$","ANONY"
  ,"_TASK\$","ANONY"
);
%DBPrefix=("$DiscussPage\$","talk");

%ExtViewer=("^test/Uni[0-9A-F]{4,5}\$","test/UnicodeViewer");
%ExtEditor=();


$PageEmbed    = 1;      # 1 = {{page|name}} format
$MaxEmbedDepth= 10;    # maximum depth for page embedding
$IsPrintTree  = 1;    # print tree for subpages
$AMathMLPath  = "plugin/wiki2math/amathml.js";
$MathColor    = "blue";
$UseCaptcha   = 1;    # flag to enable captcha
$CaptchaKey = pack("H16","09AB1F28916C42DA");

$UseDBI	=1;
$DBName="dbi:SQLite:dbname=db/habitatdb.db";
$DBUser="";
$DBPass="";
%DBErr=(RaiseError=>0,PrintError=>1);

$UsePerlDiff  = 1;
$UseActivation= 0;
$UseDetailedLog=0;

$BuildinPages{"Habitat/NewSyntax"}=<<HABITAT_NEWFEATURES;
= Habitat's new features =
<toc>
<html><style type="text/css">
div.embedpage{background-color:#CCCCCC;}
</style></html>
== # Page HTML Embedding ==
By typing: <pre><nowiki>{{test/demo1}}</nowiki></pre><br>
you can embed the HTML form of page [[test/demo1]] into the 
current page, such as the following example:
{{test/demo1}}

the content of [[test/demo1]] is
<pre>{(test/demo1)}</pre>

== # Page Raw Text Embedding ==
By typing: <pre><nowiki>{(test/demo1)}</nowiki></pre><br>
you can embed the raw text form of page [[test/demo1]] into the 
current page, such as in this example [[test/demo3]].
The raw text for [[test/demo3]] can be found 
[http:?keywords=test/demo3&raw=1 here].


== # Object-oriented wiki pages ==

In Habitat, each wiki page is an "object". It has its own
data (i.e. content) and methods (rules). The methods can 
alter the form or representation of the data at different 
stages. There are 4 basic rules: pre-viewer rules, 
post-viewer rules, pre-editor rules and post-editor rules.

Pre-viewer and post-viewer rules are called when a user 
browses a page (or browse a page where this page is embedded 
with). The difference is that "pre-viewer" rules are called
before converting wiki raw text to HTML, and "post-viewer"
are called after the conversion.

Pre- and post-editor rules are called when a user is
trying to edit the content of a page. The pre-editor 
rules will modify the page text before sending the
editing interface to the user. With this rule, one can
define a HTML editor (using HTML and javascript) to modify the
page content with a specific format. The post-editor
rules are applied when user submits the modified content
from the editor.

The methods associated with a wiki page are automatically 
inherited by its subpages. For example, if you define
the '''pre-viewer''' rules for page [[atomic/menu]], when browsing
page [[atomic/menu/style1]], the rules for [[atomic/menu]]
will be executed first, before executing any rules defined
for [[atomic/menu/style1]] itself (this allows mutation).

== # Wikipage Rules - Pre-viewer ==

The pre-viewer rules are defined in a special wiki page
named "pagename/.v0" where "pagename" is the associated 
wiki page. Currently, Habitat only supports regular expression
replacement commands as the rules. We will extend this to
more complex languages in the future.

Here we show a simple demo for how to use pre-viewer rules. 
Let's first define a page called [[test/code]], and set the
pre-viewer rules in [[test/code/.v0]] as
<pre>{(test/code/.v0)}</pre>

You can see, the rules adds some HTML tages before and 
after the raw data. Let's define a subpage named 
[[test/code/codedemo]] with content
<pre>{(test/code/codedemo)}</pre>

when you browse [[test/code/codedemo]], you will see
{{test/code/codedemo}}


HABITAT_NEWFEATURES

$BuildinPages{"test/code/.v0"}='^/<pre>
$/<\/pre>';

$BuildinPages{"test/code/codedemo"}='// sample C++ code
class HabitatWikiPage{
      char *name;
      char *text;
      HabitatWikiPage(char *pagename);
      void previewer();
};';

$BuildinPages{"test/Uni8888"}='';

$BuildinPages{"test/UnicodeViewer"}='<html>
<script type="text/javascript">
 function getunicode(){
     var parts = location.href.split("#");
     var glyphpath = parts[parts.length-1];
     try {
	 glyphpath = decodeURIComponent(glyphpath);
     } catch(e) {;}
     if(parts.length>1) {
	var hex=glyphpath.replace(/.*Uni([0-9A-Fa-f]+)$/,"$1");
	var val=parseInt(hex,16);
        glyphpath=String.fromCharCode(val);
	document.getElementById("unititle").innerHTML="UNICODE:"+hex+"&raquo;"+glyphpath;
	var str="";
	for(i=-16;i<=16;i++){
	     if(i==0)
		str+="<&#"+(val+i)+";>";
	     else
		str+="<a href=\"?test/Uni"+(val+i).toString(16).toUpperCase()+"\">&#"+(val+i)+";</a>";
	}
	document.getElementById("uniblock").innerHTML=str;
     }
 };
 window.onload = getunicode;
</script>
<h2 id="unititle"></h2>
<p id="uniblock" style="font-size:20px"></h2>
</html>';

$BuildinPages{"test/demo1"}='== # Embedding Content ==
This text comes from the embedded page.';

$BuildinPages{"test/demo2"}='== # Parent Page ==
This text is from parient page.
{{test/demo1}}';

$BuildinPages{"test/demo3"}='== # Parent Page ==
This text is from parient page.
{(test/demo1)}';

$BuildinPages{"atom/menu/.v0"}='-+/<hr class="menusep">';
$BuildinPages{"atom/menu/.v1"}='^/<style type="text\/css">\
ul.wikiullevel1{\
  margin: 0;\
  padding: 0;\
  background-color:rgb(60,192,60);\
  color:white;\
  list-style-type: none;\
}\
ul.wikiullevel1 li{\
  position: relative;\
  display: inline;\
  margin:8px;\
}\
ul.wikiullevel2{\
  left: 0;\
  top: 0;\
  border: 1px solid gray;\
  position: absolute;\
  display: block;\
  visibility: hidden;\
  z-index: 100;\
  background-color:rgb(256,256,210);\
  color: green;\
  padding:0;\
  white-space:nowrap;\
  filter:alpha(opacity=90);\
  opacity: 0.9;\
  list-style-type: none;\
}\
ul.wikiullevel2 li{\
  float: none;\
  display: block;\
  margin:10px;\
}\
hr.menusep{\
  width:200px;\
  color: #aaaaaa;\
}\
<\/style>\
<script type="text\/javascript" src="\/plugin\/menu\/menuscript.js"><\/script>';

1
# == End of Configuration =================================================
